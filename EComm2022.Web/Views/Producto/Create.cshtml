@model EComm2022.Web.Models.Producto.ProductoEditVm

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4>Nuevo Producto</h4>
<hr />


@using (Html.BeginForm("Create", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" })){
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.NombreProducto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NombreProducto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NombreProducto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control"}, @rows=7, @cols=60  })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MarcaId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.MarcaId, new SelectList(Model.Marcas,"MarcaId","NombreMarca"),"Seleccione Marca", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MarcaId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CategoriaId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CategoriaId, new SelectList(Model.Categorias,"CategoriaId","Descripcion"),"Seleccione Categoría", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="col-md-6">
            <div class="card">
                @if (Model.Imagen == null)
                {
                    <img id="imgSalida" src="@Url.Content("~/Content/Imagenes/Productos/SinImagenDisponible.jpg")"  class="card-img-top" alt="Sin imágen disponible" style="width: 50%"/>

                }
                else
                {
                    <img id="imgSalida" src="@Url.Content("{@Model.Imagen}")"  class="card-img-top" alt="Imágen de {@Model.NombreProducto}" style="width: 50%"/>
                    
                }
                <div class="card-body">
                    <div class="col-md-10">
                        <span class="btn btn-default btn-file" id=file-input>
                            @Html.TextBoxFor(modelo => modelo.ImagenFile, new { type = "file" })
                        </span>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Activo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Activo)
                        @Html.ValidationMessageFor(model => model.Activo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Guardar" class="btn btn-primary" />
                    @Html.ActionLink("Volver", "Index", null, new { @class = "btn btn-success" })
                </div>
            </div>

        </div>
    </div>

</div>
}


@section scripts
{
<script>
    $(document).ready(function () {
        $('#file-input').change(function (e) {
            addImage(e);
        });

        function addImage(e) {
            var file = e.target.files[0],
                imageType = /image.*/;

            if (!file.type.match(imageType))
                return;

            var reader = new FileReader();
            reader.onload = fileOnload;
            reader.readAsDataURL(file);
        }

        function fileOnload(e) {
            var result = e.target.result;
            $('#imgSalida').attr("src", result);
        }

    });


</script>

}
